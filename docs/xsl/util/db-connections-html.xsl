<?xml version = "1.0" encoding = "UTF-8"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0">
  
  <!--
    ** This style sheet creates an HTML document that reports the number of 
    ** open DB connections left when a CTS test directory is done executing.
    ** The original information is generated by a special porting package
    ** that determines the number of open DB connections before and after
    ** a test directory is executed.  This information is written to an XML
    ** file in the CTS temp directory (named db-report.xml).  The format of
    ** the db-report.xml file is listed below:
    **
    **   <?xml version="1.0" encoding="UTF-8"?>
    **       <test-dirs>
    **         <test-dir>
    **           <name>/var/kgrucci/cts/j2eects/tests/jdbc/ee/dbMeta/dbMeta11</name>
    **           <start-open-cons>41</start-open-cons>
    **           <end-open-cons>41</end-open-cons>
    **           <delta-cons>0</delta-cons>
    **         </test-dir>
    **         <test-dir>
    **           <name>/var/kgrucci/cts/j2eects/tests/jdbc/ee/dbMeta/dbMeta1</name>
    **           <start-open-cons>41</start-open-cons>
    **           <end-open-cons>41</end-open-cons>
    **           <delta-cons>0</delta-cons>
    **         </test-dir>
    **         ...
    **       </test-dirs>
    **
    ** This stylesheet can be used to report all the test-dir elements in a
    ** db-report.xml file or the test-dir elements can be filtered by the 
    ** delta-cons element.  If the users chooses to filter the test-dir
    ** elements, only those test-dir elements who's delta-cons element's
    ** content is greater than 0 will be piped to the output HTML file.
    **
    ** To create an HTML report with all the test-dir elements, set the
    ** report-type parameter to "all" when running this transformation.
    ** To create an HTML report with test-dir elements who's delta-cons
    ** content is greater than 0, set the report-type parameter to "delta".
    ** Note, see the documentation for the XSL transformation engine you
    ** are using to determine how to set stylesheet parameters.  Users who
    ** have a CTS tools workspace can use the xsl-transformer tool.  See
    ** the xsl-transformer tool's README for details.
    ** 
    -->

  <xsl:param name="report-type" select="'all'"/>
  <xsl:param name="test-area" select="'UNDEFINED'"/>

  <xsl:output method="html" indent="yes"/>
  
  <xsl:template match="/">
    <html>
      <head>
        <title><xsl:value-of select="$test-area"/> DB Connection Report</title>
      </head>
      <body bgcolor="white">
        <h2><center><xsl:value-of select="$test-area"/> DB Connection Report</center></h2>
        <br/>
        <xsl:apply-templates/>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="test-dirs">
    <TABLE width="900" border="1" frame="box" cellpadding="5">
      <TH bgcolor="#BFBFBF">
        <FONT size="1PT">Test Directory</FONT>
      </TH>
      <TH bgcolor="#BFBFBF">
        <FONT size="1PT">Start DB Connections</FONT>
      </TH>
      <TH bgcolor="#BFBFBF">
        <FONT size="1PT">End DB Connections</FONT>
      </TH>
      <TH bgcolor="#BFBFBF">
        <FONT size="1PT">Delta DB Connections</FONT>
      </TH>
      <xsl:apply-templates/>
    </TABLE>
    <br/>
  </xsl:template>

  <xsl:template name="add-row">
    <xsl:param name="dir"/>    
    <tr>
      <TD align="center" valign="center">
        <font size="2PT">
          <xsl:value-of select="$dir/name"/>
        </font>
      </TD>
      <TD align="center" valign="center">
        <font size="2PT">
          <xsl:value-of select="$dir/start-open-cons"/>
        </font>
      </TD>
      <TD align="center" valign="center">
        <font size="2PT">
          <xsl:value-of select="$dir/end-open-cons"/>
        </font>
      </TD>
      <TD align="center" valign="center">
        <font size="2PT">
          <xsl:value-of select="$dir/delta-cons"/>
        </font>
      </TD>
    </tr>
  </xsl:template>
  
  <xsl:template match="test-dir">
    <xsl:choose>
      <xsl:when test="$report-type='delta'">
        <xsl:if test="./delta-cons &gt; 0">
          <xsl:call-template name="add-row">
            <xsl:with-param name="dir" select="."/>
          </xsl:call-template>
        </xsl:if>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="add-row">
          <xsl:with-param name="dir" select="."/>
        </xsl:call-template>        
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
</xsl:stylesheet>
